" Modeline and Notes {

" Environment {
    " Basics {
        set nocompatible        " must be first line
        set background=dark     " Assume a dark background
    " }

    " Windows Compatible {
        " On Windows, also use '.vim' instead of 'vimfiles'; this makes synchronization
        " across (heterogeneous) systems easier.
        if has('win32') || has('win64')
            set runtimepath=$HOME/.vim,$VIM/vimfiles,$VIMRUNTIME,$VIM/vimfiles/after,$HOME/.vim/after
        endif
    " }
    "
    " Setup Bundle Support {
    " The next three lines ensure that the ~/.vim/bundle/ system works
        filetype off
        set rtp+=~/.vim/bundle/vundle
        call vundle#rc()
    " }

" }

" Bundles {
    " Deps
        Bundle 'gmarik/vundle'
        Bundle 'MarcWeber/vim-addon-mw-utils'
        Bundle 'tomtom/tlib_vim'

    " Use local bundles if available {
        if filereadable(expand("~/.vimrc.bundles.local"))
            source ~/.vimrc.bundles.local
        endif
    " }
    " Use fork bundles if available {
        if filereadable(expand("~/.vimrc.bundles.fork"))
            source ~/.vimrc.bundles.fork
        endif
    " }
    "

    " In your .vimrc.bundles.local file"
    " config vim performance first or not
    if !exists('g:is_win')
        if has('win32') || has('win64')
            let g:is_win = 1
        else
            let g:is_win = 0
        endif
    endif


    " In your .vimrc.bundles.local file"
    " list only the plugin groups you will use
    if !exists('g:spf13_bundle_groups')
        "let g:spf13_bundle_groups=['general', 'colors',  'programming', 'snip', 'php', 'ruby', 'python', 'javascript', 'html', 'coffeescript', 'ios', 'document', 'twig', 'scala', 'bash', 'potion', 'ynote']
        let g:spf13_bundle_groups=['general', 'colors', 'programming', 'snip', 'javascript', 'css', 'html', 'coffeescript', 'ios', 'document', 'bash', 'ynote']
    endif

    " To override all the included bundles, put
    " g:override_spf13_bundles = 1
    " in your .vimrc.bundles.local file"
    if !exists("g:override_spf13_bundles")

    " General
        if count(g:spf13_bundle_groups, 'general')
            Bundle 'scrooloose/nerdtree'
            Bundle 'matchit.zip'
            "Bundle 'Lokaltog/vim-powerline'
            "Bundle 'Lokaltog/vim-easymotion'
            "NOTE: csapprox cause errors
            "Bundle 'godlygeek/csapprox'
            "Bundle 'jistr/vim-nerdtree-tabs'
            "Bundle 'flazz/vim-colorschemes'
            Bundle 'mbbill/undotree'
            "if !exists('g:spf13_no_views')
                "Bundle 'vim-scripts/restore_view.vim'
            "endif
            "Bundle 'tpope/vim-abolish.git'
            "Provides tab completion while inside the “/” search
            " useless!!! not able for search and repalce
            "Bundle 'vim-scripts/SearchComplete'
            " to zoomin/out/reset guifont size
            Bundle 'vim-scripts/zoom.vim'
            Bundle 'vim-scripts/IndentAnything'
            Bundle 'FuDesign2008/WebSearch.vim'
            Bundle 'FuDesign2008/AutoClose.vim'
            Bundle 'FuDesign2008/OpenUrl.vim'
            Bundle 'FuDesign2008/ToggleNumber.vim'
            Bundle 'FuDesign2008/SpaceControl.vim'
            "Bundle 'Yggdroot/indentLine'
            "Bundle 'nathanaelkane/vim-indent-guides'
            Bundle 'tpope/vim-surround'
            if g:is_win
                "windows need install `grep` and `find` tools, see
                " http://gnuwin32.sourceforge.net/packages/grep.htm
                " http://gnuwin32.sourceforge.net/packages/findutils.htm
                Bundle 'vim-scripts/grep.vim'
                Bundle 'ervandew/supertab'
            else
                Bundle 'FuDesign2008/plan.vim'
                Bundle 'FuDesign2008/translator.vim'
                Bundle 'mattn/calendar-vim'
                Bundle 'kien/ctrlp.vim'
                " YCM is better than NeoComplCache and supertab
                Bundle 'FuDesign2008/YouCompleteMe'
                if executable('ack-grep')
                    let g:ackprg="ack-grep -H --nocolor --nogroup --column"
                    Bundle 'mileszs/ack.vim'
                elseif executable('ack')
                    Bundle 'mileszs/ack.vim'
                endif
            endif
        endif

    "Colors
        if count(g:spf13_bundle_groups, 'colors')
            "light color schemes
            Bundle 'therubymug/vim-pyte'
            Bundle 'vim-scripts/summerfruit.vim'
            "Bundle 'vim-scripts/autumnleaf_modified.vim'
            "Bundle 'FuDesign2008/ironman.vim'
            "Bundle 'FuDesign2008/proton.vim'
            "Bundle 'vim-scripts/mayansmoke'
            "dark color schemes
            Bundle 'FuDesign2008/codeschool.vim'
            "Bundle 'Lokaltog/vim-distinguished'
            Bundle 'nanotech/jellybeans.vim'
            "Bundle 'jpo/vim-railscasts-theme'
            "Bundle 'matthewtodd/vim-twilight'
            "Bundle 'tpope/vim-vividchalk'
            "Bundle 'twerth/ir_black'
            Bundle 'tomasr/molokai'
            "Bundle 'jnurmine/Zenburn'
            "Bundle 'vim-scripts/desert.vim'
            "Bundle 'briancarper/gentooish.vim'
            "Bundle 'cschlueter/vim-wombat'
            Bundle 'jonathanfilip/vim-lucius'
            "Bundle 'vim-scripts/peaksea'
            "Bundle 'altercation/vim-colors-solarized'
            Bundle 'FuDesign2008/GoodColors.vim'
            "color schemes end
        endif


    " General Programming
        if count(g:spf13_bundle_groups, 'programming')
            " Pick one of the checksyntax, jslint, or syntastic
            " so disable it
            "Bundle 'scrooloose/syntastic'
            "Bundle 'mattn/webapi-vim'
            "Bundle 'mattn/gist-vim'
            Bundle 'scrooloose/nerdcommenter'
            "@see http://vimcasts.org/episodes/aligning-text-with-tabular-vim/
            Bundle 'godlygeek/tabular'
            Bundle 'FuDesign2008/GotoFile.vim'
            "Bundle 'Yggdroot/indentLine'
            if !g:is_win
                "Bundle 'tpope/vim-fugitive'
                if executable('ctags')
                    Bundle 'majutsushi/tagbar'
                endif
            endif
        endif
    " Snippets
        if count(g:spf13_bundle_groups, 'snip')
            Bundle 'garbas/vim-snipmate'
            Bundle 'honza/vim-snippets'
        endif

    " PHP
        if count(g:spf13_bundle_groups, 'php')
            Bundle 'spf13/PIV'
        endif

    " Python
        if count(g:spf13_bundle_groups, 'python')
            " Pick either python-mode or pyflakes & pydoc
            Bundle 'klen/python-mode'
            "Bundle 'python.vim'
            "Bundle 'python_match.vim'
            "Bundle 'pythoncomplete'
        endif

    " Javascript
        if count(g:spf13_bundle_groups, 'javascript')
            Bundle 'leshill/vim-json'
            "Bundle 'pangloss/vim-javascript'
            Bundle 'mattn/jscomplete-vim'
            Bundle 'jelera/vim-javascript-syntax'
            Bundle 'FuDesign2008/backbone.vim'
            Bundle 'FuDesign2008/jslhint.vim'
            "Bundle 'FuDesign2008/syntastic-jslhint.vim'
            "Bundle 'FuDesign2008/WriteJSDocComment.vim'
            Bundle 'briancollins/vim-jst'
        endif

    " css
        if count(g:spf13_bundle_groups, 'css')
            Bundle 'groenewege/vim-less'
            Bundle 'hail2u/vim-css3-syntax'
        endif

    " Java
        if count(g:spf13_bundle_groups, 'scala')
            Bundle 'derekwyatt/vim-scala'
            Bundle 'derekwyatt/vim-sbt'
        endif

    " HTML
        if count(g:spf13_bundle_groups, 'html')
            Bundle 'amirh/HTML-AutoCloseTag'
        endif

    " coffeescript
        if count(g:spf13_bundle_groups, 'coffeescript')
            Bundle 'kchmck/vim-coffee-script'
        endif

    " Ruby
        if count(g:spf13_bundle_groups, 'ruby')
            Bundle 'tpope/vim-rails'
            let g:rubycomplete_buffer_loading = 1
            "let g:rubycomplete_classes_in_global = 1
            "let g:rubycomplete_rails = 1
        endif

    " Document
        if count(g:spf13_bundle_groups, 'document')
            Bundle 'tpope/vim-markdown'
            Bundle 'FuDesign2008/MarkdownViewer.vim'
            Bundle 'FuDesign2008/mkdInput.vim'
            Bundle 'vim-scripts/Figlet.vim'
            Bundle 'vim-scripts/wiki.vim'
            "Bundle 'spf13/vim-preview'
            "Bundle 'tpope/vim-cucumber'
            "Bundle 'quentindecock/vim-cucumber-align-pipes'
            "Bundle 'Puppet-Syntax-Highlighting'
        endif

    " Twig
        "if count(g:spf13_bundle_groups, 'twig')
            "Bundle 'beyondwords/vim-twig'
        "endif

    "iOS
        " has('mac') makes no effects, why ???
        if count(g:spf13_bundle_groups, 'ios') && !(has('win32') || has('win64'))
            Bundle 'Rip-Rip/clang_complete'
            Bundle 'msanders/cocoa.vim'
            Bundle 'Rip-Rip/clang_complete'
            Bundle 'b4winckler/vim-objc'
            Bundle 'eraserhd/vim-ios'
        endif

    "potion
        if count(g:spf13_bundle_groups, 'potion')
            "Bundle 'FuDesign2008/potion.vim'
        endif

    " bash
        if count(g:spf13_bundle_groups, 'bash')
            if !has('win32') && has('unix')
                Bundle 'FuDesign2008/bash_kit.vim'
            endif
        endif

    " ynote
        if count(g:spf13_bundle_groups, 'ynote')
            Bundle 'FuDesign2008/ynoteKit.vim'
        endif

    endif
" }

" General {
    set autowrite                  " automatically write a file when leaving a modified buffer
    set shortmess+=filmnrxoOtT      " abbrev. of messages (avoids 'hit enter')
" }

